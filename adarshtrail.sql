-- Create table CLIENT_EXTRA
CREATE TABLE CLIENT_EXTRA (
  PAN VARCHAR(10) PRIMARY KEY,
  HOUSE_NO VARCHAR(10),
  STREET VARCHAR(50),
  AREA VARCHAR(50),
  CITY VARCHAR(50),
  DISTRICT VARCHAR(50),
  PINCODE VARCHAR(6),
  AADHAR_NO VARCHAR(12)
);

-- Create table CLIENT
CREATE TABLE CLIENT1 (
  GSTIN VARCHAR(15) PRIMARY KEY,
  NAME VARCHAR(50),
  PHR VARCHAR(10),
  USERID VARCHAR(20),
  PASSWD VARCHAR(20),
  EMAIL_ID VARCHAR(50),
  PAN VARCHAR(10),
  FOREIGN KEY (PAN) REFERENCES CLIENT_EXTRA (PAN)
);

-- Create table R1A
CREATE TABLE R1A (
  GSTIN VARCHAR(15),
  QUARTER VARCHAR(10),
  INVOICE_NO VARCHAR(20),
  CUST_NAME VARCHAR(50),
  STATE_OF_SUPPLY VARCHAR(50),
  INVOICE_DATE DATE,
  TAXABLE_VALUE DECIMAL(10,2),
  TAX_RATE DECIMAL(5,2),
  CGST DECIMAL(10,2),
  SGST DECIMAL(10,2),
  IGST DECIMAL(10,2),
  CESS DECIMAL(10,2),
  PRIMARY KEY (GSTIN, QUARTER, INVOICE_NO),
  FOREIGN KEY (GSTIN) REFERENCES CLIENT (GSTIN)
);

-- Create table R1B
CREATE TABLE R1B (
  GSTIN VARCHAR(15),
  QUARTER VARCHAR(10),
  NIL_SUPPLY DECIMAL(10,2),
  NON_GST DECIMAL(10,2),
  NON_GST_EXPED DECIMAL(10,2),
  OTHER_EXEMPTED DECIMAL(10,2),
  PRIMARY KEY (GSTIN, QUARTER),
  FOREIGN KEY (GSTIN) REFERENCES CLIENT (GSTIN)
);

-- Create table R2A
CREATE TABLE R2A (
  GSTIN VARCHAR(15),
  INTYPE VARCHAR(10),
  GSTN VARCHAR(15),
  INVOICE_NO VARCHAR(20),
  INVOICE_DATE DATE,
  TAXABLE_VALUE DECIMAL(10,2),
  TOTAL_TAX DECIMAL(10,2),
  CGST DECIMAL(10,2),
  SGST DECIMAL(10,2),
  IGST DECIMAL(10,2),
  CESS DECIMAL(10,2),
  MONTHLY VARCHAR(10),
  PRIMARY KEY (GSTIN, INTYPE, GSTN, INVOICE_NO),
  FOREIGN KEY (GSTIN) REFERENCES CLIENT (GSTIN)
);

-- Create table 3BA
CREATE TABLE form_3BA (
  GSTN VARCHAR(15),
  MONTHLY VARCHAR(10),
  STATE VARCHAR(50),
  INTYPE VARCHAR(10),
  TOTAL_TAXABLE_VALUE DECIMAL(10,2),
  IGST DECIMAL(10,2),
  PRIMARY KEY (GSTN, MONTHLY, STATE, INTYPE),
  FOREIGN KEY (GSTN) REFERENCES CLIENT (GSTIN)
);

-- Create table 3BB
CREATE TABLE form_3BB (
  GSTN VARCHAR(15),
  INTYPE VARCHAR(10),
  TOTAL_TAXABLE_VALUE DECIMAL(10,2),
  PRIMARY KEY (GSTN, INTYPE),
  FOREIGN KEY (GSTN) REFERENCES CLIENT (GSTIN)
);

-- Inserting random data into CLIENT_EXTRA table
INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('ABCDE1234F', '123', 'Main Street', 'Downtown', 'City1', 'District1', '123456', '123456789012');

INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('FGHIJ5678K', '456', 'Oak Avenue', 'Suburbia', 'City2', 'District2', '456789', '234567890123');

INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('LMNOP9012G', '789', 'Elm Street', 'Uptown', 'City3', 'District3', '789012', '345678901234');

INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('QRSTU3456H', '1011', 'Pine Avenue', 'Rural', 'City4', 'District4', '101112', '456789012345');

INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('VWXYZ6789I', '1314', 'Cedar Street', 'Downtown', 'City5', 'District5', '131415', '567890123456');


-- Inserting random data into CLIENT table
INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN123456789', 'Client1', '9876543210', 'client1_user', 'client1_pass', 'client1@example.com', 'ABCDE1234F');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN987654321', 'Client2', '1234567890', 'client2_user', 'client2_pass', 'client2@example.com', 'FGHIJ5678K');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN567890123', 'Client3', '4567890123', 'client3_user', 'client3_pass', 'client3@example.com', 'LMNOP9012G');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN234567890', 'Client4', '7890123456', 'client4_user', 'client4_pass', 'client4@example.com', 'QRSTU3456H');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN456789012', 'Client5', '0123456789', 'client5_user', 'client5_pass', 'client5@example.com', 'VWXYZ6789I');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN789012345', 'Client6', '2345678901', 'client6_user', 'client6_pass', 'client6@example.com', 'ABCDE1234F');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN890123456', 'Client7', '5678901234', 'client7_user', 'client7_pass', 'client7@example.com', 'FGHIJ5678K');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN345678901', 'Client8', '8901234567', 'client8_user', 'client8_pass', 'client8@example.com', 'LMNOP9012G');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN901234567', 'Client9', '9012345678', 'client9_user', 'client9_pass', 'client9@example.com', 'QRSTU3456H');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN012345678', 'Client10', '1234567890', 'client10_user', 'client10_pass', 'client10@example.com', 'VWXYZ6789I');


-- Inserting random data into R1A table
INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN123456789', 'Q1', 'INV123456', 'Customer1', 'State1', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 10000.00, 18.00, 900.00, 900.00, 0.00, 100.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN987654321', 'Q2', 'INV234567', 'Customer2', 'State2', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 15000.00, 12.00, 1800.00, 1800.00, 0.00, 200.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN567890123', 'Q3', 'INV345678', 'Customer3', 'State3', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 20000.00, 18.00, 3600.00, 3600.00, 0.00, 400.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN234567890', 'Q4', 'INV456789', 'Customer4', 'State4', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 25000.00, 12.00, 3000.00, 3000.00, 0.00, 300.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN456789012', 'Q1', 'INV567890', 'Customer5', 'State5', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 30000.00, 18.00, 5400.00, 5400.00, 0.00, 600.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN789012345', 'Q2', 'INV678901', 'Customer6', 'State6', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 35000.00, 12.00, 4200.00, 4200.00, 0.00, 500.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN890123456', 'Q3', 'INV789012', 'Customer7', 'State7', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 40000.00, 18.00, 7200.00, 7200.00, 0.00, 800.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN345678901', 'Q4', 'INV890123', 'Customer8', 'State8', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 45000.00, 12.00, 5400.00, 5400.00, 0.00, 600.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN901234567', 'Q1', 'INV901234', 'Customer9', 'State9', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 50000.00, 18.00, 9000.00, 9000.00, 0.00, 1000.00);

INSERT INTO R1A (GSTIN, QUARTER, INVOICE_NO, CUST_NAME, STATE_OF_SUPPLY, INVOICE_DATE, TAXABLE_VALUE, TAX_RATE, CGST, SGST, IGST, CESS)
VALUES ('GSTIN012345678', 'Q2', 'INV012345', 'Customer10', 'State10', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 55000.00, 12.00, 6600.00, 6600.00, 0.00, 700.00);

-- Inserting random data into form_3BA table
INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN123456789', 'January 2023', 'State1', 'Type1', 10000.00, 1800.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN987654321', 'February 2023', 'State2', 'Type2', 15000.00, 2700.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN345678901', 'March 2023', 'State3', 'Type3', 12000.00, 2160.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN234567890', 'April 2023', 'State4', 'Type4', 18000.00, 3240.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN456789012', 'May 2023', 'State5', 'Type5', 20000.00, 3600.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN789012345', 'June 2023', 'State6', 'Type6', 25000.00, 4500.00);

-- Inserting more random data into form_3BA table
INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN901234567', 'July 2023', 'State7', 'Type7', 22000.00, 3960.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN012345678', 'August 2023', 'State8', 'Type8', 17000.00, 3060.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN567890123', 'September 2023', 'State9', 'Type9', 19000.00, 3420.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN234567890', 'October 2023', 'State10', 'Type10', 21000.00, 3780.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN345678901', 'November 2023', 'State11', 'Type11', 23000.00, 4140.00);

INSERT INTO form_3BA (GSTN, MONTHLY, STATE, INTYPE, TOTAL_TAXABLE_VALUE, IGST)
VALUES ('GSTIN789012345', 'December 2023', 'State12', 'Type12', 27000.00, 4860.00);

-- Inserting random data into form_3BB table
INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN123456789', 'Type1', 5000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN987654321', 'Type2', 7000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN345678901', 'Type3', 6000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN234567890', 'Type4', 8000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN456789012', 'Type5', 9000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN789012345', 'Type6', 10000.00);

-- Inserting more random data into form_3BB table
INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN901234567', 'Type7', 12000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN012345678', 'Type8', 11000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN567890123', 'Type9', 13000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN234567890', 'Type10', 15000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN345678901', 'Type11', 14000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN789012345', 'Type12', 16000.00);


-- Inserting random data into R1B table
INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN123456789', 'Q1 2023', 1000.00, 500.00, 200.00, 100.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN987654321', 'Q2 2023', 1500.00, 600.00, 250.00, 150.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN345678901', 'Q3 2023', 1200.00, 700.00, 300.00, 200.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN234567890', 'Q4 2023', 1300.00, 800.00, 350.00, 250.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN456789012', 'Q1 2024', 1400.00, 900.00, 400.00, 300.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN789012345', 'Q2 2024', 1500.00, 1000.00, 450.00, 350.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN901234567', 'Q3 2024', 1600.00, 1100.00, 500.00, 400.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN012345678', 'Q4 2024', 1700.00, 1200.00, 550.00, 450.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN567890123', 'Q1 2025', 1800.00, 1300.00, 600.00, 500.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN234567890', 'Q2 2025', 1900.00, 1400.00, 650.00, 550.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN345678901', 'Q3 2025', 2000.00, 1500.00, 700.00, 600.00);

INSERT INTO R1B (GSTIN, QUARTER, NIL_SUPPLY, NON_GST, NON_GST_EXPED, OTHER_EXEMPTED)
VALUES ('GSTIN789012345', 'Q4 2025', 2100.00, 1600.00, 750.00, 650.00);


-- Inserting random data into R2A table
INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN123456789', 'Type1', 'GSTN123456789', 'INV123456', TO_DATE('2023-01-01', 'YYYY-MM-DD'), 10000.00, 1800.00, 900.00, 900.00, NULL, NULL, 'January');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN987654321', 'Type2', 'GSTN987654321', 'INV987654', TO_DATE('2023-02-01', 'YYYY-MM-DD'), 15000.00, 2700.00, 1350.00, 1350.00, NULL, NULL, 'February');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN345678901', 'Type3', 'GSTN345678901', 'INV345678', TO_DATE('2023-03-01', 'YYYY-MM-DD'), 12000.00, 2160.00, 1080.00, 1080.00, NULL, NULL, 'March');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN234567890', 'Type4', 'GSTN234567890', 'INV234567', TO_DATE('2023-04-01', 'YYYY-MM-DD'), 18000.00, 3240.00, 1620.00, 1620.00, NULL, NULL, 'April');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN456789012', 'Type5', 'GSTN456789012', 'INV456789', TO_DATE('2023-05-01', 'YYYY-MM-DD'), 20000.00, 3600.00, 1800.00, 1800.00, NULL, NULL, 'May');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN789012345', 'Type6', 'GSTN789012345', 'INV789012', TO_DATE('2023-06-01', 'YYYY-MM-DD'), 25000.00, 4500.00, 2250.00, 2250.00, NULL, NULL, 'June');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN901234567', 'Type7', 'GSTN901234567', 'INV901234', TO_DATE('2023-07-01', 'YYYY-MM-DD'), 22000.00, 3960.00, 1980.00, 1980.00, NULL, NULL, 'July');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN012345678', 'Type8', 'GSTN012345678', 'INV012345', TO_DATE('2023-08-01', 'YYYY-MM-DD'), 17000.00, 3060.00, 1530.00, 1530.00, NULL, NULL, 'August');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN567890123', 'Type9', 'GSTN567890123', 'INV567890', TO_DATE('2023-09-01', 'YYYY-MM-DD'), 19000.00, 3420.00, 1710.00, 1710.00, NULL, NULL, 'September');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN234567890', 'Type10', 'GSTN234567890', 'INV234567', TO_DATE('2023-10-01', 'YYYY-MM-DD'), 21000.00, 3780.00, 1890.00, 1890.00, NULL, NULL, 'October');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN345678901', 'Type11', 'GSTN345678901', 'INV345678', TO_DATE('2023-11-01', 'YYYY-MM-DD'), 23000.00, 4140.00, 2070.00, 2070.00, NULL, NULL, 'November');

INSERT INTO R2A (GSTIN, INTYPE, GSTN, INVOICE_NO, INVOICE_DATE, TAXABLE_VALUE, TOTAL_TAX, CGST, SGST, IGST, CESS, MONTHLY)
VALUES ('GSTIN789012345', 'Type12', 'GSTN789012345', 'INV789012', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 27000.00, 4860.00, 2430.00, 2430.00, NULL, NULL, 'December');

SELECT table_name, column_name, data_type, data_length
FROM user_tab_columns
ORDER BY table_name, column_id;

SELECT * FROM CLIENT_EXTRA;
SELECT * FROM CLIENT;
SELECT * FROM R1A;
SELECT * FROM R1B;
SELECT * FROM R2A;
SELECT * FROM form_3BA;
SELECT * FROM form_3BB;


--workbook

--select   
SELECT * FROM form_3BA WHERE GSTN = 'GSTIN123456789';
SELECT * FROM form_3BA ORDER BY MONTHLY DESC;
SELECT DISTINCT INTYPE FROM form_3BA;
SELECT MONTHLY, SUM(TOTAL_TAXABLE_VALUE) AS TOTAL_AMOUNT FROM form_3BA GROUP BY MONTHLY;
SELECT a.GSTN, b.INTYPE, b.TOTAL_TAXABLE_VALUE FROM form_3BA a INNER JOIN form_3BB b ON a.GSTN = b.GSTN;

--SQL function

SELECT COUNT(*) FROM form_3BA;
SELECT SUM(TOTAL_TAXABLE_VALUE) FROM form_3BA;
SELECT AVG(TOTAL_TAXABLE_VALUE) FROM form_3BA;
SELECT MAX(TOTAL_TAXABLE_VALUE) FROM form_3BA;
SELECT MIN(TOTAL_TAXABLE_VALUE) FROM form_3BA;
SELECT UPPER(INTYPE) FROM form_3BA;
SELECT LOWER(GSTN) FROM form_3BB;
SELECT CONCAT(GSTN, '-', INTYPE) FROM form_3BA;
SELECT DATE_FORMAT(INVOICE_DATE, '%Y-%m-%d') FROM form_3BA;


--join
SELECT *
FROM form_3BA
INNER JOIN form_3BB ON form_3BA.GSTN = form_3BB.GSTN;

SELECT *
FROM form_3BA
LEFT JOIN form_3BB ON form_3BA.GSTN = form_3BB.GSTN;

SELECT *
FROM form_3BA
RIGHT JOIN form_3BB ON form_3BA.GSTN = form_3BB.GSTN;

SELECT *
FROM form_3BA
FULL JOIN form_3BB ON form_3BA.GSTN = form_3BB.GSTN;


--sub queries

SELECT *
FROM form_3BA
WHERE GSTN IN (SELECT GSTN FROM form_3BB WHERE INTYPE = 'Type1');

SELECT *,
       (SELECT COUNT(*) FROM form_3BB WHERE GSTN = form_3BA.GSTN) AS BB_COUNT
FROM form_3BA;

SELECT *
FROM (SELECT DISTINCT GSTN FROM form_3BA) AS SubqueryTable;

SELECT *,
       (SELECT MAX(TOTAL_TAXABLE_VALUE) FROM form_3BB WHERE GSTN = form_3BA.GSTN) AS MAX_TAXABLE_VALUE
FROM form_3BA;



-- views

CREATE MATERIALIZED VIEW form_3BB_materialized_view
BUILD IMMEDIATE
REFRESH COMPLETE
AS
SELECT * FROM form_3BB;

CREATE VIEW form_3BB_read_only_view AS
SELECT * FROM form_3BB
WITH READ ONLY;

select * from form_3BB_read_only_view;

CREATE VIEW form_3BA_updatable_view AS
SELECT * FROM form_3BA
WITH CHECK OPTION;

-- advanced select 
SELECT CLIENT.GSTIN, COUNT(*) AS NUM_INVOICES, SUM(R1A.TAXABLE_VALUE) AS TOTAL_TAXABLE_AMOUNT
FROM R1A
JOIN CLIENT ON R1A.GSTIN = CLIENT.GSTIN
GROUP BY CLIENT.GSTIN;

SELECT CLIENT.GSTIN, CLIENT.NAME,
       (SELECT COUNT(*) FROM R1A WHERE R1A.GSTIN = CLIENT.GSTIN) AS NUM_INVOICES
FROM CLIENT
WHERE CLIENT.GSTIN IN (SELECT DISTINCT GSTIN FROM R1A);

SELECT GSTIN, INVOICE_NO, TAXABLE_VALUE,
       SUM(TAXABLE_VALUE) OVER (PARTITION BY GSTIN ORDER BY INVOICE_DATE) AS CUMULATIVE_TOTAL
FROM R1A;


-- pl sql


DECLARE
  CURSOR c_data IS
    SELECT * FROM form_3BA;
BEGIN
  FOR rec IN c_data LOOP
    DBMS_OUTPUT.PUT_LINE('GSTN: ' || rec.GSTN || ', Monthly: ' || rec.MONTHLY);
  END LOOP;
END;
/

DECLARE
  v_total NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_total FROM form_3BB;
  IF v_total > 0 THEN
    DBMS_OUTPUT.PUT_LINE('There are ' || v_total || ' records in form_3BB table.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('form_3BB table is empty.');
  END IF;
END;
/

DECLARE
  v_total NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_total FROM form_3BA;
  IF v_total > 100 THEN
    RAISE_APPLICATION_ERROR(-20001, 'The number of records exceeds the limit.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('The number of records is within the limit.');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
/
commit;

SELECT COUNT(*) INTO v_total FROM form_3BA;




-- Retrieve all data from R1B table
SELECT * FROM R1B;

-- Retrieve data for a specific GSTIN in a specific quarter
SELECT * FROM R1B WHERE GSTIN = 'GSTIN123' AND QUARTER = 'Q1';

-- Retrieve data for NIL_SUPPLY greater than a certain value
SELECT * FROM R1B WHERE NIL_SUPPLY > 1500;





-- Calculate the total taxable value for all invoices
SELECT SUM(TAXABLE_VALUE) FROM R1A;

-- Find the maximum tax rate applied in the R1A table
SELECT MAX(TAX_RATE) FROM R1A;

-- Calculate the average taxable value per invoice
SELECT AVG(TAXABLE_VALUE) FROM R1A;

-- Get the current date and time
SELECT SYSDATE FROM DUAL;

-- Concatenate the GSTIN and INTYPE columns in R2A table
SELECT CONCAT(GSTIN, INTYPE) FROM R2A;



-- Inner join between R1A and CLIENT tables
SELECT * FROM R1A INNER JOIN CLIENT ON R1A.GSTIN = CLIENT.GSTIN;

-- Left join between R1A and CLIENT tables
SELECT * FROM R1A LEFT JOIN CLIENT ON R1A.GSTIN = CLIENT.GSTIN;

-- Right join between R1A and CLIENT tables
SELECT * FROM R1A RIGHT JOIN CLIENT ON R1A.GSTIN = CLIENT.GSTIN;

-- Full outer join between R1A and CLIENT tables
SELECT * FROM R1A FULL OUTER JOIN CLIENT ON R1A.GSTIN = CLIENT.GSTIN;



-- Subquery to find all invoices with taxable value greater than the average taxable value
SELECT * FROM R1A WHERE TAXABLE_VALUE > (SELECT AVG(TAXABLE_VALUE) FROM R1A);

-- Subquery to find clients who have no invoices in R1A table
SELECT * FROM CLIENT WHERE NOT EXISTS (SELECT 1 FROM R1A WHERE CLIENT.GSTIN = R1A.GSTIN);



-- Create a view to display all invoices with their corresponding client names
CREATE VIEW Invoice_Client_View AS
SELECT R1A.*, CLIENT.NAME
FROM R1A
JOIN CLIENT ON R1A.GSTIN = CLIENT.GSTIN;


select * from Invoice_Client_View;
-- Create a view to display total taxable value per client
CREATE VIEW Total_Taxable_Value_View AS
SELECT GSTIN, SUM(TAXABLE_VALUE) AS TOTAL_TAXABLE_VALUE
FROM R1A
GROUP BY GSTIN;



-- Using window function to calculate cumulative total taxable value per GSTIN in R1A table
SELECT GSTIN, INVOICE_NO, TAXABLE_VALUE, 
       SUM(TAXABLE_VALUE) OVER (PARTITION BY GSTIN ORDER BY INVOICE_NO) AS CUMULATIVE_TOTAL
FROM R1A;



-- Retrieve all distinct GSTINs from the R1A table
SELECT DISTINCT GSTIN FROM R1A;

-- Retrieve all invoices with tax rate greater than 10% and taxable value less than 1000
SELECT * FROM R1A WHERE TAX_RATE > 10 AND TAXABLE_VALUE < 1000;



-- PL/SQL block to calculate total number of invoices in R1A table
DECLARE
  v_invoice_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_invoice_count FROM R1A;
  DBMS_OUTPUT.PUT_LINE('Total number of invoices: ' || v_invoice_count);
END;
/


drop table client1;
drop table transaction_history ;
drop table Payment_details;

drop table clientextra;




--normal form 

--use of 3NF

-- Create new CLIENT and CLIENT_ADDRESS tables
CREATE TABLE CLIENT1 (
  GSTIN VARCHAR(15) PRIMARY KEY,
  NAME VARCHAR(50),
  PHR VARCHAR(10),
  USERID VARCHAR(20),
  PASSWD VARCHAR(20),
  EMAIL_ID VARCHAR(50),
  PAN VARCHAR(10)
);

CREATE TABLE CLIENT_ADDRESS (
  PAN VARCHAR(10) PRIMARY KEY,
  HOUSE_NO VARCHAR(10),
  STREET VARCHAR(50),
  AREA VARCHAR(50),
  CITY VARCHAR(50),
  DISTRICT VARCHAR(50),
  PINCODE VARCHAR(6),
  AADHAR_NO VARCHAR(12)
);

-- Create new INVOICES table
CREATE TABLE INVOICES (
  INVOICE_NO VARCHAR(20) PRIMARY KEY,
  GSTIN VARCHAR(15),
  QUARTER VARCHAR(10),
  CUST_NAME VARCHAR(50),
  STATE_OF_SUPPLY VARCHAR(50),
  INVOICE_DATE DATE,
  TAXABLE_VALUE DECIMAL(10,2),
  TAX_RATE DECIMAL(5,2),
  CGST DECIMAL(10,2),
  SGST DECIMAL(10,2),
  IGST DECIMAL(10,2),
  CESS DECIMAL(10,2),
  FOREIGN KEY (GSTIN) REFERENCES CLIENT(GSTIN)
);

-- Create new GST_DETAILS table
CREATE TABLE GST_DETAILS (
  GSTIN VARCHAR(15) PRIMARY KEY,
  NIL_SUPPLY DECIMAL(10,2),
  NON_GST DECIMAL(10,2),
  NON_GST_EXPED DECIMAL(10,2),
  OTHER_EXEMPTED DECIMAL(10,2),
  FOREIGN KEY (GSTIN) REFERENCES CLIENT(GSTIN)
);

-- Create new GST_RETURN table
CREATE TABLE GST_RETURN (
  GSTIN VARCHAR(15),
  INTYPE VARCHAR(10),
  GSTN VARCHAR(15),
  INVOICE_NO VARCHAR(20),
  INVOICE_DATE DATE,
  TAXABLE_VALUE DECIMAL(10,2),
  TOTAL_TAX DECIMAL(10,2),
  CGST DECIMAL(10,2),
  SGST DECIMAL(10,2),
  IGST DECIMAL(10,2),
  CESS DECIMAL(10,2),
  MONTHLY VARCHAR(10),
  PRIMARY KEY (GSTIN, INTYPE, GSTN, INVOICE_NO),
  FOREIGN KEY (GSTIN) REFERENCES CLIENT(GSTIN),
  FOREIGN KEY (INVOICE_NO) REFERENCES INVOICES(INVOICE_NO)
);

-- Create new GST_SUMMARY table
CREATE TABLE GST_SUMMARY (
  GSTN VARCHAR(15),
  MONTHLY VARCHAR(10),
  STATE VARCHAR(50),
  INTYPE VARCHAR(10),
  TOTAL_TAXABLE_VALUE DECIMAL(10,2),
  IGST DECIMAL(10,2),
  PRIMARY KEY (GSTN, MONTHLY, STATE, INTYPE),
  FOREIGN KEY (GSTN) REFERENCES CLIENT(GSTIN)
);

-- Create new GST_TYPE table
CREATE TABLE GST_TYPE (
  GSTN VARCHAR(15),
  INTYPE VARCHAR(10),
  TOTAL_TAXABLE_VALUE DECIMAL(10,2),
  PRIMARY KEY (GSTN, INTYPE),
  FOREIGN KEY (GSTN) REFERENCES CLIENT(GSTIN)
);




-- Migrate data to CLIENT table
INSERT INTO CLIENT1 (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
SELECT GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN
FROM CLIENT;

-- Migrate data to CLIENT_ADDRESS table
INSERT INTO CLIENT_ADDRESS (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
SELECT PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO
FROM CLIENT_EXTRA;



-- Insert data into old CLIENT_EXTRA table
INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('ABCDE1234F', '123', 'Main St', 'Central', 'City1', 'District1', '123456', '123456789012');

INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('FGHIJ5678K', '456', 'Park Ave', 'West', 'City2', 'District2', '789012', '987654321098');

INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('KLMNO1234P', '789', 'Broadway', 'East', 'City3', 'District3', '345678', '567890123456');

INSERT INTO CLIENT_EXTRA (PAN, HOUSE_NO, STREET, AREA, CITY, DISTRICT, PINCODE, AADHAR_NO)
VALUES ('PQRST6789A', '1011', 'Elm St', 'North', 'City4', 'District4', '901234', '123456789012');

-- Insert data into old CLIENT table
INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN123456789', 'John Doe', '1234', 'john.doe', 'password', 'john.doe@email.com', 'ABCDE1234F');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN987654321', 'Jane Doe', '5678', 'jane.doe', 'password', 'jane.doe@email.com', 'FGHIJ5678K');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN111122223', 'Alice Smith', '9012', 'alice.smith', 'password', 'alice.smith@email.com', 'LMNOP9012G');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN333344445', 'Bob Johnson', '3456', 'bob.johnson', 'password', 'bob.johnson@email.com', 'QRSTU3456H');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN555566667', 'Emily Brown', '7890', 'emily.brown', 'password', 'emily.brown@email.com', 'VWXYZ7890I');

INSERT INTO CLIENT (GSTIN, NAME, PHR, USERID, PASSWD, EMAIL_ID, PAN)
VALUES ('GSTIN777788889', 'Mike Wilson', '2345', 'mike.wilson', 'password', 'mike.wilson@email.com', 'ABCDW2345J');


savepoint main;


-- Inserting data with transitive dependency
INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN123456789', 'Type1', 5000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN123456789', 'Type2', 7000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN123456789', 'Type3', 6000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN987654321', 'Type1', 8000.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN987654321', 'Type2', 7500.00);

INSERT INTO form_3BB (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
VALUES ('GSTIN987654321', 'Type3', 7000.00);



-- Create the form_3BB_main table
CREATE TABLE form_3BB_main (
  GSTN VARCHAR(15),
  INTYPE VARCHAR(10),
  PRIMARY KEY (GSTN, INTYPE),
  FOREIGN KEY (GSTN) REFERENCES CLIENT (GSTIN)
);

-- Create the form_3BB_transitive table
CREATE TABLE form_3BB_transitive (
  GSTN VARCHAR(15),
  INTYPE VARCHAR(10),
  TOTAL_TAXABLE_VALUE DECIMAL(10,2),
  PRIMARY KEY (GSTN, INTYPE),
  FOREIGN KEY (GSTN, INTYPE) REFERENCES form_3BB_main (GSTN, INTYPE)
);


-- Populate the form_3BB_main table
INSERT INTO form_3BB_main (GSTN, INTYPE)
SELECT DISTINCT GSTN, INTYPE
FROM form_3BB;

-- Populate the form_3BB_transitive table
INSERT INTO form_3BB_transitive (GSTN, INTYPE, TOTAL_TAXABLE_VALUE)
SELECT GSTN, INTYPE, TOTAL_TAXABLE_VALUE
FROM form_3BB;


CREATE VIEW CLIENT_VIEW AS
SELECT 
    c.GSTIN,
    c.NAME,
    c.PHR,
    c.USERID,
    c.PASSWD,
    c.EMAIL_ID,
    ce.HOUSE_NO,
    ce.STREET,
    ce.AREA,
    ce.CITY,
    ce.DISTRICT,
    ce.PINCODE,
    ce.AADHAR_NO
FROM 
    CLIENT c
JOIN 
    CLIENT_EXTRA ce ON c.PAN = ce.PAN;
select * from client_view;


--CREATE VIEW CLIENT_CLIENT_EXTRA_1NF AS
SELECT C.GSTIN, C.NAME, C.PHR, C.USERID, C.PASSWD, C.EMAIL_ID, CE.HOUSE_NO, CE.STREET, CE.AREA, CE.CITY, CE.DISTRICT, CE.PINCODE, CE.AADHAR_NO
FROM CLIENT C
JOIN CLIENT_EXTRA CE ON C.PAN = CE.PAN;



--CREATE VIEW R1A_CLIENT_2NF AS
SELECT R.GSTIN, R.QUARTER, R.INVOICE_NO, R.CUST_NAME, R.STATE_OF_SUPPLY, R.INVOICE_DATE, R.TAXABLE_VALUE, R.TAX_RATE, R.CGST, R.SGST, R.IGST, R.CESS, C.NAME, C.PHR
FROM R1A R
JOIN CLIENT C ON R.GSTIN = C.GSTIN;

--CREATE VIEW R1B_CLIENT_CLIENT_EXTRA_3NF AS
SELECT R.GSTIN, R.QUARTER, R.NIL_SUPPLY, R.NON_GST, R.NON_GST_EXPED, R.OTHER_EXEMPTED, C.NAME, C.PHR, CE.HOUSE_NO, CE.STREET, CE.AREA, CE.CITY, CE.DISTRICT, CE.PINCODE, CE.AADHAR_NO
FROM R1B R
JOIN CLIENT C ON R.GSTIN = C.GSTIN
JOIN CLIENT_EXTRA CE ON C.PAN = CE.PAN;


--CREATE VIEW R2A_CLIENT_BCNF AS
SELECT R.GSTIN, R.INTYPE, R.GSTN, R.INVOICE_NO, R.INVOICE_DATE, R.TAXABLE_VALUE, R.TOTAL_TAX, R.CGST, R.SGST, R.IGST, R.CESS, C.NAME, C.PHR
FROM R2A R
JOIN CLIENT C ON R.GSTIN = C.GSTIN;


--CREATE VIEW R2A_form_3BA_4NF AS
SELECT R.GSTIN, R.INTYPE, R.GSTN, R.INVOICE_NO, R.INVOICE_DATE, R.TAXABLE_VALUE, R.TOTAL_TAX, R.CGST, R.SGST, R.IGST, R.CESS, F.MONTHLY, F.STATE, F.INTYPE, F.TOTAL_TAXABLE_VALUE, F.IGST
FROM R2A R
JOIN form_3BA F ON R.GSTIN = F.GSTN;


--CREATE VIEW R2A_form_3BB_5NF AS
SELECT R.GSTIN, R.INTYPE, R.GSTN, R.INVOICE_NO, R.INVOICE_DATE, R.TAXABLE_VALUE, R.TOTAL_TAX, R.CGST, R.SGST, R.IGST, R.CESS, B.INTYPE AS form_3BB_INTYPE, B.TOTAL_TAXABLE_VALUE AS form_3BB_TOTAL_TAXABLE_VALUE
FROM R2A R
JOIN form_3BB B ON R.GSTIN = B.GSTN AND R.INTYPE = B.INTYPE;


--conconruncy 
-- Start a transaction
START TRANSACTION;

-- Set the isolation level to SERIALIZABLE to ensure serializability
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

-- SQL queries within the transaction
-- For example, update client information
UPDATE CLIENT SET EMAIL_ID = 'newemail@example.com' WHERE GSTIN = 'GSTIN234567890';

-- Commit the transaction
COMMIT;

--explict locck
-- Example of explicit locking using SELECT FOR UPDATE
START TRANSACTION;
SELECT * FROM CLIENT WHERE GSTIN = 'GSTIN234567890' FOR UPDATE;
-- Perform operations on the selected data
COMMIT;

-- Create a transaction log table
CREATE TABLE TRANSACTION_LOG (
  LOG_ID SERIAL PRIMARY KEY,
  TRANSACTION_ID VARCHAR(20),
  OPERATION VARCHAR(10), -- 'INSERT', 'UPDATE', 'DELETE'
  TABLE_NAME VARCHAR(50),
  AFFECTED_ROW_ID VARCHAR(50),
  OLD_VALUE VARCHAR(255),
  NEW_VALUE VARCHAR(255),
  LOG_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- Create a table to store transaction logs
CREATE TABLE transaction_log (
    log_sequence_number INT PRIMARY KEY,
    transaction_id VARCHAR(20),
    transaction_status VARCHAR(10),
    operation VARCHAR(10),
    table_name VARCHAR(50),
    row_id VARCHAR(50),
    old_value VARCHAR(255),
    new_value VARCHAR(255),
    timestamp TIMESTAMP
);

-- Example trigger to log INSERT operations
CREATE OR REPLACE TRIGGER log_insert_trigger
AFTER INSERT ON your_table
FOR EACH ROW
BEGIN
    INSERT INTO transaction_log (log_sequence_number, transaction_id, transaction_status, operation, table_name, row_id, old_value, new_value, timestamp)
    VALUES (your_sequence.nextval, sys_context('USERENV','TXID'), 'ACTIVE', 'INSERT', 'client', :NEW.row_id, NULL, :NEW.column_value, systimestamp);
END;



